//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyActiveListenerComponent anyActiveListener { get { return (AnyActiveListenerComponent)GetComponent(GameComponentsLookup.AnyActiveListener); } }
    public bool hasAnyActiveListener { get { return HasComponent(GameComponentsLookup.AnyActiveListener); } }

    public void AddAnyActiveListener(System.Collections.Generic.List<IAnyActiveListener> newValue) {
        var index = GameComponentsLookup.AnyActiveListener;
        var component = (AnyActiveListenerComponent)CreateComponent(index, typeof(AnyActiveListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyActiveListener(System.Collections.Generic.List<IAnyActiveListener> newValue) {
        var index = GameComponentsLookup.AnyActiveListener;
        var component = (AnyActiveListenerComponent)CreateComponent(index, typeof(AnyActiveListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyActiveListener() {
        RemoveComponent(GameComponentsLookup.AnyActiveListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyActiveListener;

    public static Entitas.IMatcher<GameEntity> AnyActiveListener {
        get {
            if (_matcherAnyActiveListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyActiveListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyActiveListener = matcher;
            }

            return _matcherAnyActiveListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyActiveListener(IAnyActiveListener value) {
        var listeners = hasAnyActiveListener
            ? anyActiveListener.value
            : new System.Collections.Generic.List<IAnyActiveListener>();
        listeners.Add(value);
        ReplaceAnyActiveListener(listeners);
    }

    public void RemoveAnyActiveListener(IAnyActiveListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyActiveListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyActiveListener();
        } else {
            ReplaceAnyActiveListener(listeners);
        }
    }
}
