//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ChessMoveRuleComponent chessMoveRule { get { return (ChessMoveRuleComponent)GetComponent(GameComponentsLookup.ChessMoveRule); } }
    public bool hasChessMoveRule { get { return HasComponent(GameComponentsLookup.ChessMoveRule); } }

    public void AddChessMoveRule(int[] newReachablePosX, int[] newReachablePosY) {
        var index = GameComponentsLookup.ChessMoveRule;
        var component = (ChessMoveRuleComponent)CreateComponent(index, typeof(ChessMoveRuleComponent));
        component.reachablePosX = newReachablePosX;
        component.reachablePosY = newReachablePosY;
        AddComponent(index, component);
    }

    public void ReplaceChessMoveRule(int[] newReachablePosX, int[] newReachablePosY) {
        var index = GameComponentsLookup.ChessMoveRule;
        var component = (ChessMoveRuleComponent)CreateComponent(index, typeof(ChessMoveRuleComponent));
        component.reachablePosX = newReachablePosX;
        component.reachablePosY = newReachablePosY;
        ReplaceComponent(index, component);
    }

    public void RemoveChessMoveRule() {
        RemoveComponent(GameComponentsLookup.ChessMoveRule);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherChessMoveRule;

    public static Entitas.IMatcher<GameEntity> ChessMoveRule {
        get {
            if (_matcherChessMoveRule == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.ChessMoveRule);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherChessMoveRule = matcher;
            }

            return _matcherChessMoveRule;
        }
    }
}
