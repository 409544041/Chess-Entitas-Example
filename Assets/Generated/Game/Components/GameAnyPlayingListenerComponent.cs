//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public AnyPlayingListenerComponent anyPlayingListener { get { return (AnyPlayingListenerComponent)GetComponent(GameComponentsLookup.AnyPlayingListener); } }
    public bool hasAnyPlayingListener { get { return HasComponent(GameComponentsLookup.AnyPlayingListener); } }

    public void AddAnyPlayingListener(System.Collections.Generic.List<IAnyPlayingListener> newValue) {
        var index = GameComponentsLookup.AnyPlayingListener;
        var component = (AnyPlayingListenerComponent)CreateComponent(index, typeof(AnyPlayingListenerComponent));
        component.value = newValue;
        AddComponent(index, component);
    }

    public void ReplaceAnyPlayingListener(System.Collections.Generic.List<IAnyPlayingListener> newValue) {
        var index = GameComponentsLookup.AnyPlayingListener;
        var component = (AnyPlayingListenerComponent)CreateComponent(index, typeof(AnyPlayingListenerComponent));
        component.value = newValue;
        ReplaceComponent(index, component);
    }

    public void RemoveAnyPlayingListener() {
        RemoveComponent(GameComponentsLookup.AnyPlayingListener);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherAnyPlayingListener;

    public static Entitas.IMatcher<GameEntity> AnyPlayingListener {
        get {
            if (_matcherAnyPlayingListener == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.AnyPlayingListener);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherAnyPlayingListener = matcher;
            }

            return _matcherAnyPlayingListener;
        }
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.EventEntityApiGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public void AddAnyPlayingListener(IAnyPlayingListener value) {
        var listeners = hasAnyPlayingListener
            ? anyPlayingListener.value
            : new System.Collections.Generic.List<IAnyPlayingListener>();
        listeners.Add(value);
        ReplaceAnyPlayingListener(listeners);
    }

    public void RemoveAnyPlayingListener(IAnyPlayingListener value, bool removeComponentWhenEmpty = true) {
        var listeners = anyPlayingListener.value;
        listeners.Remove(value);
        if (removeComponentWhenEmpty && listeners.Count == 0) {
            RemoveAnyPlayingListener();
        } else {
            ReplaceAnyPlayingListener(listeners);
        }
    }
}
